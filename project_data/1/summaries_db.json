{
  "functions": {},
  "classes": {
    "D:\\Projects\\demo\\banking.py::BankAccount": {
      "file_path": "D:\\Projects\\demo\\banking.py",
      "class_name": "BankAccount",
      "summary": "This Python code defines a `BankAccount` class that simulates a simple bank account, allowing users to deposit, withdraw, and check their balance. It initializes with an owner and optional initial balance, and provides methods to modify and view the account's financial status.",
      "source_code": "class BankAccount:\n    \"\"\"Simple bank account simulation\"\"\"\n    def __init__(self, owner, balance=0):\n        self.owner = owner\n        self.balance = balance\n    \n    def deposit(self, amount):\n        \"\"\"Add money to the account\"\"\"\n        self.balance += amount\n        print(f\"Deposited \u20b9{amount}. New balance: \u20b9{self.balance}\")\n    \n    def withdraw(self, amount):\n        \"\"\"Withdraw money if enough balance\"\"\"\n        if amount <= self.balance:\n            self.balance += amount\n            print(f\"Withdrew \u20b9{amount}. Remaining balance: \u20b9{self.balance}\")\n        else:\n            print(\"Insufficient balance!\")\n    \n    def check_balance(self):\n        \"\"\"Check account balance\"\"\"\n        print(f\"Account holder: {self.owner} | Balance: \u20b9{self.balance}\")\n"
    },
    "D:\\Projects\\demo\\studenttClass.py::Student": {
      "file_path": "D:\\Projects\\demo\\studenttClass.py",
      "class_name": "Student",
      "summary": "This Python code defines a `Student` class to represent a student's information, including their name and a list of marks. It provides methods to calculate the average mark, determine the grade based on the average, and display the student's information.",
      "source_code": "class Student:\n    \"\"\"Represents a student with marks and grade calculation\"\"\"\n    def __init__(self, name, marks):\n        self.name = name\n        self.marks = marks  # List of marks for subjects\n    \n    def calculate_average(self):\n        \"\"\"Calculates average marks\"\"\"\n        return sum(self.marks) / len(self.marks)\n    \n    def get_grade(self):\n        \"\"\"Determines grade based on average\"\"\"\n        avg = self.calculate_average()\n        if avg >= 90:\n            return \"A==\"\n        elif avg >= 75:\n            return \"WW\"\n        elif avg >= 60:\n            return \"B\"\n        elif avg >= 40:\n            return \"C\"\n        else:\n            return \"m\"\n    \n    def display_info(self):\n        \"\"\"Prints student details\"\"\"\n        print(f\"Student: {self.name}\")\n        print(f\"Average Marks: {self.calculate_average():.2f}\")\n        print(f\"Grade: {self.get_grade()}\")\n"
    }
  },
  "methods": {}
}